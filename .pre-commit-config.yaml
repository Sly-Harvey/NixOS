# Pre-commit hooks for NixOS configuration
# Run `nix develop` then `pre-commit install` to set up
repos:
  # Nix formatting and linting
  - repo: https://github.com/nix-community/nixpkgs-fmt
    rev: v1.3.0
    hooks:
      - id: nixpkgs-fmt
        name: Format Nix files
        description: Format Nix files with nixpkgs-fmt
        files: \.nix$
  - repo: https://github.com/astro/deadnix
    rev: v1.2.1
    hooks:
      - id: deadnix
        name: Remove dead Nix code
        description: Find and remove unused code in Nix files
        files: \.nix$
        args: ["--edit"]
  - repo: https://github.com/nix-community/statix
    rev: v0.5.8
    hooks:
      - id: statix
        name: Lint Nix files
        description: Lint Nix files for anti-patterns and suggestions
        files: \.nix$
        args: ["check"]
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: Trim trailing whitespace
        description: Remove trailing whitespace from files
        exclude: \.patch$
      - id: end-of-file-fixer
        name: Fix end of files
        description: Ensure files end with a newline
      - id: check-merge-conflict
        name: Check for merge conflicts
        description: Check for files that contain merge conflict strings
      - id: check-yaml
        name: Check YAML syntax
        description: Validate YAML files
        files: \.(yaml|yml)$
      - id: check-json
        name: Check JSON syntax
        description: Validate JSON files
        files: \.json$
      - id: check-toml
        name: Check TOML syntax
        description: Validate TOML files
        files: \.toml$
      - id: check-added-large-files
        name: Check for large files
        description: Prevent large files from being committed
        args: ['--maxkb=1000']
  # Custom NixOS validation hooks
  - repo: local
    hooks:
      - id: nix-flake-check
        name: Validate flake
        description: Run nix flake check to validate the flake
        entry: nix
        args: ["flake", "check", "--no-build"]
        language: system
        files: ^(flake\.(nix|lock)|.*\.nix)$
        pass_filenames: false
      - id: nix-fmt-check
        name: Check Nix formatting
        description: Ensure Nix files are properly formatted
        entry: nix
        args: ["fmt", "--", "--check"]
        language: system
        files: \.nix$
        pass_filenames: false
      - id: nix-build-check
        name: Build check (dry-run)
        description: Verify NixOS configuration builds without errors
        entry: bash
        args: ["-c", "nix build .#nixosConfigurations.Default.config.system.build.toplevel --dry-run"]
        language: system
        files: ^(flake\.(nix|lock)|.*\.nix)$
        pass_filenames: false
# Configuration
default_stages: [commit]
fail_fast: false
minimum_pre_commit_version: "3.0.0"
